

:root{
	--cubeSize:200px;
	--perspective:800px;
	--space:0px;
}

*{
	transition:.5s;
}


body{
	margin: 0;
	width: 100vw;
	height: 100vh;
}

#wrapper{
	width: 95%;
	height: 95%;
}

body, #board{
	display: grid;
	place-items:center;
}

#board_wrapper{
	display: grid;
	grid-template-columns: max-content auto max-content;
	grid-gap:2em;
}


#board{
	max-width: 100%;
	height: 65vh;
	background-color: #00000023;
	perspective: 800px;
}

.inputgroup, .textField{
	position: relative;
	z-index: 20;
}

#left_settings .inputgroup{
	display: flex;
	flex-direction: column;
	grid-gap: 0.25rem;
	position: relative;
}


#left_settings .inputgroup #perspective{
	position: absolute;
	top:3rem;
	--width:50vmin;
	width: var(--width);
	transform: translate(25px, var(--width)) rotateZ(270deg);
	transform-origin: left;
}


#right_settings .textField{
	display: flex;
	flex-direction: column;
	gap:20px;
}

#right_settings .textField > div{
	display:flex;
	gap:10px;
	justify-content:flex-end;
	align-items: center;
}

#right_settings .textField input, .textField > div{
	font-size:1.2em;
	font-weight:bold;
	text-align:center;
}

#bottom_settings{
	display: grid;
	place-items:center;
}

#bottom_settings .controller{
	width: 70vw;
}

#bottom_settings .controller{
	display: flex;
	flex-direction: column;
}

#bottom_settings .controller .inputgroup{
	display:grid;
	grid-template-columns:50px auto 100px;
	grid-gap:10px;
	place-items:center;
	margin-top: 8px;
}

#bottom_settings .controller input{
	width:100%;
	position:relative;
}

#bottom_settings .inputgroup > span:first-child{
	content:attr(value);
	font-size:18px;
	font-weight:bold;
	font-family:Consolas;
	line-height:0.5em;
}



/*CUBE IS HERE*/

#cube{
	display: grid;
	place-items:center;
	position:relative;
	transform-style:preserve-3d;
	transform: rotateY(45deg) rotateZ(-15deg);
}

#cube > div{
	position:absolute;
	width:var(--cubeSize);
	height:var(--cubeSize);
	background-color:#25ff4533;
	border: solid 1px yellow;
	color:white;
	
}

#cube > div{
	transform: rotateY( calc(90deg * var(--ang))) translateZ( calc(var(--cubeSize) / 2 + var(--space)  ));
}

#cube > div:nth-child(5),#cube > div:nth-child(6){
	transform: rotateX( calc(90deg * var(--ang))) translateZ( calc(var(--cubeSize) / 2 + var(--space)  ));
}